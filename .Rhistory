scan()
16
13
11
12
9
7
6
6
6
6
rep <- scan()
16
13
11
12
9
7
6
6
6
6
rep
ext <- scan()
5
5
4
4
5
6
1
1
3
2

ext
sum(rep)
sum(ext(
sum(ext)
q()
n
library(rmarkdown)
render("kalo_kupuna.Rmd", output_format=c("pdf_document", "html_document"))
q()
n
q()
n
q()
n
x = readLines("data/Winter_2012.txt")
summary(x)
x[[1]]
x = paste(x)
summary(x)
y = strsplit(x, split = " ")
summary(y)
library(wordcloud)
tab = table(y)
y = unlist(y)
tab = table(y)
wordcloud(names(tab), tab)
q()
n
length(txt)
txt[[1]]
txt[[2]]
txt[[34]]
txt[[33]]
txt[[3]]
txt[[4]]
txt[[5]]
txt[[6]]
txt[[7]]
txt[[10]]
names(txt)
txt[[9]]
txt[[8]]
txt[[7]]
txt[[8]]
var
var
var[[1]]
var[[2]]
var[[3]]
txt[[8]]
var
var[1]
var[279]
txt[[8]]
var
txt[[10]]
txt[[11]]
txt[[13]]
txt[[12]]
txt[[14]]
txt[[8]]
var
var
var
var[[1]]
var[1]
var
iconv(var, from="UTF-8", to="ASCII//TRANSLIT")
iconv(var, from="UTF-8", to="ASCII//TRANSLIT")
var
url
var[i]
mode(var[i])
class(var[i])
read_html(var[i])
var[i]
i
url[i]
var[i]
var[i]
var[i]
var
var[i]
var
var
var
var
i
length(var)
txt.var[[1]]
txt.var[[1]][[1]]
txt.var[[1]][[2]]
txt.var[[1]][[3]]
length(txt.var[[1]])
names(txt.var[[1]])
txt.var[[1]][[4]]
txt.var[[1]][[5]]
txt.var[[1]][[6]]
txt.var[[1]][[7]]
txt.var[[1]][[8]]
txt.var[[1]][[9]]
txt.var[[1]][[7]]
x <- txt.var[[1]][[7]]
x <- txt.var[[1]][[8]]
txt.var[[1]][[7]]
txt.var[[1]][[8]]
txt.var[[1]][[10]]
txt.var[[1]][[8]]
txt.var[[1]][[8]]
x <- txt.var[[1]][[8]]
x[[1]]
x[[2]]
x[3]]
length(x)
length(x[[1]])
x[[1]]
length(x)
x[[1]]
length(x)
length(x[[1]])
x[[1]]
x[[2]]
x[[3]]
x[[4]]
x[[5]]
x[[6]]
x[[8]]
x[[9]]
x[[12]]
x[[14]]
x[[15]]
x[[20]]
x[[19]]
x[[18]]
x[[17]]
x[[16]]
x[[17]]
x
(1:length(x)) %% 2 == 1
(1:length(x)) %% 2
(1:length(x)) %% 1
(1:length(x)) %% 3
(1:length(x)) %% 3 == 2
x[(1:length(x)) %% 3 == 2]
(1:length(x)) %% 3 == 2
(1:length(x)) %% 2 == 0
(1:length(x)) %% 2 == 1
17/2
length(x)
x[[18]]
x[[1]]
x[[2]]
x[[3]]
x[[4]]
x[[5]]
x[(1:length(x)) %% 2 == 1]
(1:length(x)) %% 2 == 1
(1:length(x)) %% 2
(1:length(x)) %% 2
sum((1:length(x)) %% 2)
sum((1:length(x))-1 %% 2)
sum((1:length(x)) %% 2)
(1:length(x)) %% 2 == 0
sum((1:length(x)) %% 2 == 0)
x[[1]]
x[[2]]
head
head
x
x[[1]]
summary
main
main
main
x
x
x[[1]]
x[[3]]
x[3:17]
x[3:17][(1:length(x[3:17])) %% 2 == 0]
x[3:17][(1:length(x[3:17])) %% 2 == 1]
which(x == "USE AS FOOD")
x
x
x[1]
headers
x[7]
x[8]
x[9]
x[x == "PUA (FLOWER)"]
x[which(x == "PUA (FLOWER)")]
which(x == "PUA (FLOWER)")
which(x == "PUA (FLOWER)") + 1
x[which(x == "PUA (FLOWER)") + 1]
header <- "PUA (FLOWER)"
x[which(x == header) + 1] %in% x
sections <- headers
(x[which(x == header) + 1] %in% sections)
header = "REMARKS"
(x[which(x == header) + 1] %in% sections)
headers
fix.section
x[7]
x[8]
x[9]
x[10]
x[11]
x[12]
x[13]
x[134]
x[14]
x[13]
x[14]
x[15]
fix.secion
fix.section
fix.section
x[14]
fix.section
x[14]
x[13]
x[15]
x[16]
out
head(out)
head(out)
i
txt.var[[i]]
txt.var[[i]][[8]]
x
x[(1:length(x)) %% 2 == 0]
sections = x[(1:length(x)) %% 2 == 1]
sections
out
out[, "info"]
i
txt.var[i]
txt.var[[i]][[8]]
x <- txt.var[[i]][[8]]
headers
x[(1:length(x)) %% 2 == 0]
out
info.var[[1]]
info.var[[2]]
info.var[[3]]
info.var[[4]]
info.var[[5]]
info.var[[2]]
info.var[[3]]
txt.var[[3]][[8]]
i
txt.var[[3]][[8]]
info.var[[3]][[8]]
info.var[[3]]
info.var[[5]]
txt.var[[5]][[8]]]
txt.var[[5]]
txt.var[[i]]
txt.var[[i]][[8]]
x
length(info)
length(headers)
x <- txt.var[[i]][[8]]
x
info
length(info)
info.var[[i]]
info.var[[3]]
info.var[[4]]
info.var[[5]]
lapply(info.vars, length)
unlist(lapply(info.var, dim)(
unlist(lapply(info.var, dim))
head(ike.kupuna)
head(ike.kk)
ike.kk[1,]
ike.kk[2,]
ike.kk[3,]
ike.kk[4,]
ike.kk[5,]
colnames(ike.kk)
ike.kk[, 7]
ike.kk[ike.kk[, 7] == "NA", 7]
length(ike.kk[ike.kk[, 7] == "NA", 7])
nrow(ike.kk)
colnames(ike.kk)
info.fw
info.fw
tab.fw
info.fw
info.fw
info.fw
info.fw
info.fw
info.fw
info.fw
info.fw
info.fw
info.fw
tab.fw
info.fw
table(info.fw)
sort(table(info.fw))
match(info.fw, c("by", "from", "to", "or", "also", "the", 
                 "for", "in", "on", "as", "a", "an", "it", 
                 "are", "is", "and"))
match(info.fw, c("by", "from", "to", "or", "also", "the", 
                 "for", "in", "on", "as", "a", "an", "it", 
                 "are", "is", "and"))
tab.fw
match(info.fw, c("by", "from", "to", "or", "also", "the", 
                 "for", "in", "on", "as", "a", "an", "it", 
                 "are", "is", "and")) == "NA"
info.fw
srch.ala
render("kalo_kupuna.Rmd")
library(rmarkdown)
render("kalo_kupuna.Rmd")
q()
n
